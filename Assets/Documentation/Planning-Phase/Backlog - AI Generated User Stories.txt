using the Entity Relationship Diagram please help me generate User Stories for this website using the format:

Title
MoSCoW Priority
As a User.... I Want.... So I Can....

Acceptance Criteria:
Input Criteria here

Tasks:
Input Tasks Needed to do to achieve Acceptance Criteria

Once user stories are generated I asked: 
Using the User Stories that have been Generated please format them in a Markdown Language Format.

### üßç Public User Stories

#### Title: View All Games  
**Priority:** Must-Have  
**Story:**  
As a public visitor, I want to view all games so I can browse the catalogue without logging in.

**Acceptance Criteria:**  
- [ ]  Game list is publicly accessible.  
- [ ]  Each game displays title, thumbnail, and brief info.

**Tasks:**  
- [ ]  Create public route for game list.  
- [ ]  Fetch games from database.  
- [ ]  Render game cards with basic info.


#### Title: View Game Details  
**Priority:** Must-Have  
**Story:**  
As a public visitor, I want to view game details so I can learn more about each game.  

**Acceptance Criteria:**  
- [ ]  Clicking a game opens its detail page.  
- [ ]  Detail page shows full description, images, and tags.  

**Tasks:**  
- [ ]  Create game detail view.  
- [ ]  Link game cards to detail pages.  
- [ ]  Display full game metadata.


---


### üë§ Authenticated User Stories

#### Title: Register an Account  
**Priority:** Must-Have  

**Story:**  
As a user, I want to register an account so I can submit games and manage my Wishlist.  

**Acceptance Criteria:**  
- [ ]  Registration form accepts valid email and password.  
- [ ]  Account is created and stored securely.  

**Tasks:**  
- [ ]  Build registration form with validation.  
- [ ]  Connect to Django auth system.  
- [ ]  Hash and store credentials securely.


#### Title: Log In and Log Out  
**Priority:** Must-Have  

**Story:**  
As a user, I want to log in and out so I can access personalized features.  

**Acceptance Criteria:**  
- [ ]  Login form accepts valid credentials.  
- [ ]  Session is created and destroyed correctly.  

**Tasks:**  
- [ ]  Implement login/logout views.  
- [ ]  Handle session management.  
- [ ]  Redirect appropriately after login/logout.


#### Title: Submit a New Game  
**Priority:** Must-Have  

**Story:**  
As a user, I want to submit a new game so I can share it with others.  

**Acceptance Criteria:**  
- [ ]  Form includes title, description, image, and tags.  
- [ ]  Submission is stored and marked pending.  

**Tasks:**  
- [ ]  Create submission form.  
- [ ]  Validate and sanitize input.  
- [ ]  Save to database with ‚Äúpending‚Äù status.


#### Title: Edit Own Submission  
**Priority:** Should-Have  

**Story:**  
As a user, I want to edit my own game submission so I can fix mistakes.  

**Acceptance Criteria:**  
- [ ]  Users can access and update their own submissions.  
- [ ]  Changes are saved and re-reviewed if needed.  

**Tasks:**  
- [ ]  Add edit view with form pre-filled.  
- [ ]  Restrict access to owner only.  
- [ ]  Update database entry.

#### Title: Delete Own Submission  
**Priority:** Should-Have  

**Story:**  
As a user, I want to delete my own submission so I can remove outdated content.  

**Acceptance Criteria:**  
- [ ]  Users can delete their own games.  
- [ ]  Deletion is confirmed before action.  

**Tasks:**  
- [ ]  Add delete button with confirmation.  
- [ ]  Restrict access to owner only.  
- [ ]  Remove game from database.


#### Title: Add Game to Wishlist  
**Priority:** Must-Have  

**Story:**  
As a user, I want to add a game to my Wishlist so I can track my interests.  

**Acceptance Criteria:**  
- [ ]  ‚ÄúAdd to Wishlist‚Äù button is visible on game detail.  
- [ ]  Game appears in user‚Äôs Wishlist.  

**Tasks:**  
- [ ]  Create Wishlist model.  
- [ ]  Add button to game detail view.  
- [ ]  Link game to user Wishlist.


#### Title: View Wishlist  
**Priority:** Must-Have  

**Story:**  
As a user, I want to view my Wishlist so I can manage my saved games.  

**Acceptance Criteria:**  
- [ ]  Wishlist page shows all saved games.  
- [ ]  Each entry links to game detail.  

**Tasks:**  
- [ ]  Build Wishlist view.  
- [ ]  Query user‚Äôs saved games.  
- [ ]  Render game cards.


#### Title: Remove Game from Wishlist  
**Priority:** Should-Have  

**Story:**  
As a user, I want to remove games from my Wishlist so I can keep it relevant.  

**Acceptance Criteria:**  
- [ ]  ‚ÄúRemove‚Äù button is available on Wishlist entries.  
- [ ]  Game is removed from Wishlist.  

**Tasks:**  
- [ ]  Add remove button to Wishlist view.  
- [ ]  Update database to unlink game.  
- [ ]  Confirm removal with feedback.


---

### üë§ Authenticated User Stories (Continued)

#### Title: Search Games by Keyword  
**Priority:** Should-Have  

**Story:**  
As a user, I want to search for games by keyword so I can quickly find what I‚Äôm looking for.  

**Acceptance Criteria:**  
- [ ]  Search bar is available on game list page.  
- [ ]  Results match title or description.  

**Tasks:**  
- [ ]  Implement search query logic.  
- [ ]  Add search input to UI.  
- [ ]  Display filtered results.


#### Title: Filter Games by Genre  
**Priority:** Could-Have  

**Story:**  
As a user, I want to filter games by genre so I can browse by interest.  

**Acceptance Criteria:**  
- [ ]  Genre tags are available on each game.  
- [ ]  Filter dropdown or buttons allow genre selection.  

**Tasks:**  
- [ ]  Add genre field to game model.  
- [ ]  Implement genre filter logic.  
- [ ]  Update UI with genre controls.


#### Title: Bookmark Games Without Adding to Wishlist  
**Priority:** Could-Have  

**Story:**  
As a user, I want to bookmark games separately from my Wishlist so I can track games I‚Äôm curious about but not committed to.  

**Acceptance Criteria:**  
- [ ]  Bookmark button is distinct from Wishlist.  
- [ ]  Bookmarked games appear in a separate view.  

**Tasks:**  
- [ ]  Create bookmark model.  
- [ ]  Add bookmark button to game detail.  
- [ ]  Build bookmark view page.


#### Title: View Submission History  
**Priority:** Should-Have  

**Story:**  
As a user, I want to view my submission history so I can track what I‚Äôve contributed.  

**Acceptance Criteria:**  
- [ ]  History page shows all games submitted by the user.  
- [ ]  Each entry links to edit/delete options.  

**Tasks:**  
- [ ]  Query games by user ID.  
- [ ]  Build submission history view.  
- [ ]  Add links to edit/delete.


#### Title: Receive Notifications on Submission Status  
**Priority:** Could-Have  

**Story:**  
As a user, I want to receive notifications when my game is approved or rejected so I stay informed.  

**Acceptance Criteria:**  
- [ ]  Notification appears on dashboard or via email.  
- [ ]  Message includes status and optional feedback.  

**Tasks:**  
- [ ]  Implement notification system.  
- [ ]  Trigger on moderator action.  
- [ ]  Display or send message.


#### Title: Rate Games  
**Priority:** Could-Have  

**Story:**  
As a user, I want to rate games so I can share my opinion and help others decide.  

**Acceptance Criteria:**  
- [ ]  Rating system (e.g., 1‚Äì5 stars) is available on game detail.  
- [ ]  Average rating is displayed.  

**Tasks:**  
- [ ]  Add rating model.  
- [ ]  Create UI for rating input.  
- [ ]  Calculate and display average.


#### Title: Flag Inappropriate Content  
**Priority:** Should-Have  

**Story:**  
As a user, I want to flag inappropriate games so moderators can review them.  

**Acceptance Criteria:**  
- [ ]  ‚ÄúFlag‚Äù button is available on game detail.  
- [ ]  Flagged games are sent to moderator queue.  

**Tasks:**  
- [ ]  Add flag model and button.  
- [ ]  Notify moderators of flagged content.  
- [ ]  Track flag count per game.


#### Title: Sort Wishlist by Priority  
**Priority:** Could-Have  

**Story:**  
As a user, I want to sort my Wishlist by priority so I can focus on what I want most.  

**Acceptance Criteria:**  
- [ ]  Users can assign priority levels to Wishlist items.  
- [ ]  Wishlist view supports sorting.  

**Tasks:**  
- [ ]  Add priority field to Wishlist model.  
- [ ]  Update UI to allow sorting.  
- [ ]  Display sorted list.


#### Title: View Most Wish-listed Games  
**Priority:** Should-Have  

**Story:**  
As a user, I want to see the most wish-listed games so I can discover popular titles.  

**Acceptance Criteria:**  
- [ ]  Public leader-board shows top wish-listed games.  
- [ ]  Rankings update dynamically.  

**Tasks:**  
- [ ]  Count Wishlist entries per game.  
- [ ]  Build leader-board view.  
- [ ]  Update rankings periodically.


#### Title: Export Wishlist to CSV  
**Priority:** Could-Have  

**Story:**  
As a user, I want to export my Wishlist to a CSV file so I can use it outside the site.  

**Acceptance Criteria:**  
- [ ]  Export button downloads Wishlist as CSV.  
- [ ]  File includes game title, genre, and priority.  

**Tasks:**  
- [ ]  Implement CSV export logic.  
- [ ]  Add export button to Wishlist view.  
- [ ]  Format data for download.


#### Title: Dark Mode Toggle  
**Priority:** Could-Have  

**Story:**  
As a user, I want to toggle dark mode so I can browse comfortably at night.  

**Acceptance Criteria:**  
- [ ]  UI theme can switch between light and dark.  
- [ ]  Preference is saved per user.  

**Tasks:**  
- [ ]  Implement theme switcher.  
- [ ]  Store user preference.  
- [ ]  Apply styles dynamically.

---

### üõ°Ô∏è Moderator User Stories

#### Title: View Pending Submissions  
**Priority:** Must-Have  

**Story:**  
As a moderator, I want to view pending submissions so I can review new content.  

**Acceptance Criteria:**  
- [ ]  Dashboard shows all unapproved games.  
- [ ]  Each entry links to full submission.  

**Tasks:**  
- [ ]  Build moderator dashboard.  
- [ ]  Query games with ‚Äúpending‚Äù status.  
- [ ]  Display submission metadata.


#### Title: Approve Game Submission  
**Priority:** Must-Have  

**Story:**  
As a moderator, I want to approve a game so it becomes visible to users.  

**Acceptance Criteria:**  
- [ ]  ‚ÄúApprove‚Äù button updates game status.  
- [ ]  Game appears in public list.  

**Tasks:**  
- [ ]  Add approve button to dashboard.  
- [ ]  Update game status to ‚Äúapproved‚Äù.  
- [ ]  Trigger system to add game to all users.


#### Title: Reject Game Submission  
**Priority:** Must-Have  

**Story:**  
As a moderator, I want to reject inappropriate games so I can maintain quality.  

**Acceptance Criteria:**  
- [ ]  ‚ÄúReject‚Äù button removes or flags game.  
- [ ]  Optional feedback sent to user.  

**Tasks:**  
- [ ]  Add reject button to dashboard.  
- [ ]  Remove or flag game in database.  
- [ ]  Notify user (optional).


#### Title: Edit Any Submission  
**Priority:** Should-Have  

**Story:**  
As a moderator, I want to edit any submission so I can correct errors.  

**Acceptance Criteria:**  
- [ ]  Moderator can access and update any game.  
- [ ]  Changes are saved and logged.  

**Tasks:**  
- [ ]  Add edit access for moderators.  
- [ ]  Log changes for audit trail.  
- [ ]  Update game entry.


#### Title: Delete Any Submission  
**Priority:** Should-Have  

**Story:**  
As a moderator, I want to delete any submission so I can remove inappropriate content.  

**Acceptance Criteria:**  
- [ ]  Moderator can delete any game.  
- [ ]  Game is removed from all views.  

**Tasks:**  
- [ ]  Add delete access for moderators.  
- [ ]  Remove game from database.  
- [ ]  Trigger system to remove from Wishlist's.


---

### üßë‚Äçüíº Admin User Stories

#### Title: Detect Duplicate Submissions  
**Priority:** Should-Have  

**Story:**  
As an admin, I want to detect duplicate games so I can prevent clutter.  

**Acceptance Criteria:**  
- [ ]  Admin dashboard highlights potential duplicates.  
- [ ]  Duplicates are flagged based on title or metadata.  

**Tasks:**  
- [ ]  Implement duplicate detection logic.  
- [ ]  Build admin interface for review.  
- [ ]  Flag duplicates in database.

#### Title: Block Duplicate Games  
**Priority:** Should-Have  

**Story:**  
As an admin, I want to block duplicates so users don‚Äôt see redundant entries.  

**Acceptance Criteria:**  
- [ ]  Admin can mark games as duplicates.  
- [ ]  Duplicates are hidden from public view.  

**Tasks:**  
- [ ]  Add ‚Äúblock‚Äù button to admin dashboard.  
- [ ]  Update game visibility status.  
- [ ]  Notify moderators if needed.

---

### ‚öôÔ∏è System Stories

#### Title: Add Game to All Users  
**Priority:** Must-Have  

**Story:**  
As the system, I want to add approved games to all users so they appear in the catalogue.  

**Acceptance Criteria:**  
- [ ]  Approved games are visible to all users.  
- [ ]  Game is indexed for search and Wishlist.  

**Tasks:**  
- [ ]  Trigger on approval event.  
- [ ]  Update game visibility.  
- [ ]  Rebuild search index.


#### Title: Remove Game from All Users  
**Priority:** Must-Have  

**Story:**  
As the system, I want to remove deleted games from all users so Wishlist's stay clean.  

**Acceptance Criteria:**  
- [ ]  Deleted games are removed from Wishlist's'.  
- [ ]  Game no longer appears in catalogue.  

**Tasks:**  
- [ ]  Trigger on delete event.  
- [ ]  Remove game from all Wishlist's.  
- [ ]  Update public views.


#### Title: Log Wishlist Changes  
**Priority:** Could-Have  

**Story:**  
As the system, I want to log Wishlist changes so users can undo mistakes.  

**Acceptance Criteria:**  
- [ ]  Add/remove actions are timestamped.  
- [ ]  Undo option is available within session.  

**Tasks:**  
- [ ]  Create Wishlist change log model.  
- [ ]  Track user actions.  
- [ ]  Implement undo logic.

#### Title: Update Account Info
**Priority:** Could-Have

**Story:**
As a user, I want to update my account details so I can keep my profile accurate.

Acceptance Criteria:
- [ ] Users can change email, password, or display name.

**Tasks:**
- [ ] Build account settings page.
- [ ] Implement update logic.
- [ ] Validate and save changes.


#### Title: Delete Account
**Priority:** Could-Have

**Story:**
As a user, I want to delete my account so I can remove my data from the platform.

**Acceptance Criteria:**
- [ ] Users can request account deletion.
- [ ] All associated data is removed or anonymized.

**Tasks:**
- [ ] Add delete account button.
- [ ] Confirm action with user.
- [ ] Remove or anonymize user data.






# Responsiveness User Stories

## Title  
Responsive Layout for Mobile Devices

### MoSCoW Priority  
Must Have

**As a** mobile user  
**I want** the website layout to adapt to my small screen  
**So I can** view all content without horizontal scrolling or broken sections.

### Acceptance Criteria
- Layout adjusts correctly on screens 320‚Äì768 px wide.
- No horizontal scrollbar appears.
- Content elements stack vertically or adjust proportionally.

### Tasks
1. Define CSS breakpoints for mobile screens.
2. Use responsive units (%, vh/vw, rem) for containers.
3. Test layout on common devices (iPhone SE, Galaxy S10, Pixel 6).
4. Fix layout overflow or clipping issues.

---

## Title  
Responsive Layout for Tablets

### MoSCoW Priority  
Should Have

**As a** tablet user  
**I want** the site to adapt gracefully to medium-sized screens  
**So I can** comfortably browse content in portrait or landscape mode.

### Acceptance Criteria
- Layout adapts between 769‚Äì1024 px.
- Grid/list views adjust column count appropriately.
- Navigation and buttons scale correctly.

### Tasks
1. Add tablet-specific media queries.
2. Adjust image and grid column behavior for tablet sizes.
3. Verify responsiveness in both orientations.
4. Resolve any text or element scaling issues.

---

## Title  
Responsive Navigation Menu

### MoSCoW Priority  
Must Have

**As a** user on mobile or tablet  
**I want** a collapsible navigation menu  
**So I can** access site links easily without cluttering the screen.

### Acceptance Criteria
- Navigation collapses into a hamburger menu under 1024 px width.
- Menu opens/closes smoothly.
- Focus remains within the menu when opened.
- Menu items are easy to tap (minimum 44√ó44 px).

### Tasks
1. Implement a hamburger/offcanvas menu.
2. Add animation or transition for open/close.
3. Ensure touch-friendly spacing and accessibility.
4. Test menu across browsers and screen sizes.

---

## Title  
Responsive Images and Media

### MoSCoW Priority  
Should Have

**As a** user on any device  
**I want** images and media to resize automatically  
**So I can** see clear, well-fitted visuals without distortion or overflow.

### Acceptance Criteria
- Images scale or crop correctly.
- No media causes horizontal scrolling.
- Lazy loading doesn‚Äôt break layout.

### Tasks
1. Add `max-width: 100%` to images.
2. Implement responsive image tags (`srcset`, `sizes`).
3. Test scaling on various breakpoints.
4. Ensure videos/iframes use responsive wrappers.

---

# Accessibility User Stories

## Title  
Keyboard-Only Navigation Support

### MoSCoW Priority  
Must Have

**As a** keyboard-only user  
**I want** to navigate all pages using the Tab and Enter keys  
**So I can** access all features without using a mouse.

### Acceptance Criteria
- Every interactive element is reachable via Tab.
- Logical tab order is maintained.
- No element traps focus.

### Tasks
1. Audit interactive elements for keyboard focusability.
2. Fix missing `tabindex` or replace non-semantic elements with buttons/links.
3. Verify navigation using keyboard only.
4. Add automated accessibility tests for keyboard navigation.

---

## Title  
Visible Focus Indicators

### MoSCoW Priority  
Must Have

**As a** keyboard user  
**I want** a visible focus indicator  
**So I can** know which element I‚Äôm interacting with.

### Acceptance Criteria
- All focusable elements display a visible outline or highlight.
- Focus indicator has sufficient color contrast.
- Custom components also show focus states.

### Tasks
1. Create consistent CSS focus styles.
2. Test with both light/dark backgrounds.
3. Apply focus styles to all custom components.
4. Validate contrast ratio (WCAG 2.1 AA minimum).

---

## Title  
Skip to Main Content Link

### MoSCoW Priority  
Should Have

**As a** screen reader or keyboard user  
**I want** a "Skip to main content" link at the top  
**So I can** bypass repetitive navigation links easily.

### Acceptance Criteria
- Skip link appears when focused via Tab.
- Link jumps directly to main page content.
- Works across all pages.

### Tasks
1. Add hidden skip link at page top.
2. Style it to become visible when focused.
3. Anchor link to main content section.
4. Test functionality in multiple browsers.

---

## Title  
Accessible Modals and Dialogs

### MoSCoW Priority  
Must Have

**As a** keyboard or screen reader user  
**I want** modals to manage focus properly  
**So I can** interact with them without confusion or loss of context.

### Acceptance Criteria
- Focus moves into modal when opened.
- Focus returns to triggering element when closed.
- Modal content is announced to screen readers.
- Modal can be closed with Esc key.

### Tasks
1. Implement focus trapping within modal.
2. Add ARIA roles (`dialog`, `aria-labelledby`, `aria-modal`).
3. Manage focus restore on close.
4. Test with keyboard-only and screen readers.

---

## Title  
Screen Reader Feedback for Actions

### MoSCoW Priority  
Should Have

**As a** screen reader user  
**I want** to hear confirmation when actions occur  
**So I can** know if my input was successful (e.g., adding to wishlist).

### Acceptance Criteria
- Screen reader announces action outcomes.
- ARIA live regions used for dynamic messages.
- Messages do not interrupt current speech unless important.

### Tasks
1. Add ARIA live regions to UI for updates.
2. Trigger status messages for key actions.
3. Test announcements using NVDA and VoiceOver.
4. Adjust verbosity and timing to prevent overlap.

---

## Title  
Color Contrast Compliance

### MoSCoW Priority  
Should Have

**As a** visually impaired user  
**I want** text and interface elements with sufficient contrast  
**So I can** read and interact without strain.

### Acceptance Criteria
- All text and UI elements meet WCAG 2.1 AA contrast ratios (4.5:1 for text, 3:1 for large text).
- No essential information conveyed by color alone.

### Tasks
1. Use color contrast checker tools on all UI components.
2. Update color palette or backgrounds where necessary.
3. Test dark/light modes for consistency.
4. Document accessible color usage in style guide.

---

